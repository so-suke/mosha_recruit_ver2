// レスポンシブサイズ
// ------------------------------------
$breakpointDesktop: 1199px;
$breakpointIpad: 1023px;
$breakpointHeaderNav: 953px;
$breakpointTabletLandscape: 900px;
$breakpointPhone: 767px;
$breakpointPhonePortrait: 480px;

// レスポンシブ計算に使用します。
// ------------------------------------
$tabletLandscapeAdjustVal: 900 / 100;
$phoneAdjustVal: 767 / 100;
$phoneAdjustLargeVal: (767 / 100) - 1; // visual画像の大きさの違いを出すためのもの。
$phonePortraitAdjustVal: 480 / 100;

// opacity値
// ------------------------------------
$opacityLight: 0.4;
$opacityStandard: 0.6;
$opacityDark: 0.8;

// scale値
// ------------------------------------
$scaleBeforeHover: scale(0.9, 0.6);
$scaleSmall: scale(0.6);
$scaleLittleSmall: scale(0.8);

// transitionスピード
// ------------------------------------
$transitionSpeedVeryFast: 0.2s;
$transitionSpeedFast: 0.3s;
$transitionSpeedLittleFast: 0.6s;
$transitionSpeedNormal: 1s;
$transitionSpeedLittleSlow: 1.2s;
$transitionSpeedVerySlow: 2s;

// transition:delay
$transitionDelayLittle: 0.3s;
$transitionDelayLittleLarge: 0.6s;
$transitionDelayLarge: 1s;

// cubic-bezier値
// ------------------------------------
// 参照: https://qiita.com/skwbr/items/64d1ac2c3d8e8a3110f5
$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);

// color
// ------------------------------------
$colorWhite: #fff;
$colorBlack: #121212;
$colorPrimary: #008aff;
$colorFooterBorder: #d7d7d7;
$colorFooterIconBg: rgba(255, 255, 255, 0.2);
// color: ヘッダーメニュー、ホバー時の色
$colorMenuHoverBg: #e9e9e9;
$colorMenuHoverAbout: #ffcb00;
$colorMenuHoverMember: #ff5238;
$colorMenuHoverSpecial: #41da70;
$colorMenuHoverGraduates: #8943ef;

// linear-gradient
// ------------------------------------
$linearGradientVisualBg: linear-gradient(to bottom, #2679cd, #4db2f2);
$linearGradientVisualAfterBg: linear-gradient(to bottom, #2679cd, #4db2f2);
// linear-gradient: ボタンの色
$linearGradientBtnPrimary: linear-gradient(to right, #004eff, #008aff);
$linearGradientBtnSkill: linear-gradient(to right, #ffb400, #ffd200);
$linearGradientBtnMember: linear-gradient(to right, #ff4444, #ff6c00);
$linearGradientBtnSpecial: linear-gradient(to right, #00d596, #12e671);
$linearGradientBtnGraduates: linear-gradient(to right, #6e41e1, #b931da);
// linear-gradient: カラムの背景色
$linearGradientColumnBgPrimary: linear-gradient(to right, #004eff, #00a2ff);
$linearGradientColumnBgSkill: linear-gradient(to right, #ff9c00, #ffd200);
$linearGradientColumnBgMember: linear-gradient(to right, #ff4444, #ff9000);
$linearGradientColumnBgSpecial: linear-gradient(to right, #00d596, #12e62b);
$linearGradientColumnBgGraduates: linear-gradient(to right, #6e41e1, #dd53ff);

// マップ定義
// ------------------------------------

// カラム毎の背景色(_animation_normal.scss:@eachで一括定義のため、あえて作成。)
$columnKindBgLinearGradientColorMap: (
  culture: $linearGradientColumnBgPrimary,
  skill: $linearGradientColumnBgSkill,
  member: $linearGradientColumnBgMember,
  special: $linearGradientColumnBgSpecial,
  graduates: $linearGradientColumnBgGraduates
);

// アニメーションによる表示に関する定義
// ------------------------------------

// アニメーション遅延の変動値。
$delayFloatingVal: 0.1;

// visualImg関連
// ------------------------------------
// アニメーション時の表示順
$visualImgDisplayOrder: 1, 4, 5, 6, 2, 3;
// アニメーション遅延の基準値
$visualImgDelayBase: 0.6;
// ::afterのアニメーション遅延の基準値
$visualImgAfterDelayBase: 0.9;

// column関連
// ------------------------------------
// アニメーション時の表示順
$columnDisplayOrder: 2, 1, 4, 3, 6, 5;
// アニメーション遅延の基準値
$columnDelayBase: 0;
// afterのアニメーション遅延の基準値
$columnAfterDelayBase: 0.3;
// スマホサイズにおいての調整値
$columnDelayAdjustValPhone: 0.3;
